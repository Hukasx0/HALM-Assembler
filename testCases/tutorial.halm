-- ./halm tutorial.halm

show str "Halm Assembler",10
show str "Welcome to tutorial!",10,"let's start from the basics..."
show str "Halm Assembler is an Assembler (as name suggests), and Hlm interpreter."
show str "what is Hlm? "
show str "Hlm is a high level interpreted language created to help you with calculations, readability or simply managing everything in one file",10

show str filterx (== 'x 0) (prompt = "Press 'enter' to continue") 

show str "In halm you can use Assembly 8-bit and 16-bit instructions. Example:"
show str "mov al,12",10,"mov bx,0x0e",10,"inc ax",10,"cmp al,'d'",10,"int 0x10",10

show str filterx (== 'x 0) (prompt = "Press 'enter' to continue") 

show str "This language supports",10,
         "decimal numbers - 240",10,
         "hex numbers - 0xff",10,
         "binary numbers - 0b10",10,
         "octal numbers - 0o12",10,
         "strings - ",34,"Hello world!",34,10,
         "chars - 'A'",10,
         "mixed arrays (you can use every data type) - [65,0xA]",10,
         "You can also create array like this - [1..10] this will create array of range from 1 to 10 (in this case you can also use every data type)",10

show str filterx (== 'x 0) (prompt = "Press 'enter' to continue")

show str "Typing differences:",10,
         "[org 0x7c00] - will NOT work      ","[origin 0x7c00] - will work",10,
         "test:        - will NOT work      ","label test      - will work",10

show str filterx (== 'x 0) (prompt = "Press 'enter' to continue")

show str "You can also define macros",10,
         "def a = 12        - will create value macro named 'a' with value 12 decimal",10,
         "How to use it?    - simply type '\a' instead of value",10,
         "def b = { show int 12 }       - will create multi line macro (MLM), mlm holds instructions/commands instead of values",10,
         "How to use it?    - b()",10,
         "def c(value) = { show str 'value }        - will create multi line macro with one or more parameters (MLMP), mlmp holds instructions/commands and parameter that you can use by typing ' character and parameter name",10,
         "How to use it?    - c(12) or any value you want",10

         show str filterx (== 'x 0) (prompt = "Press 'enter' to continue")

show str "Some interesting builtin commands",10,
         "filterx () value      - can be used to filter values that are separated by commas or in an array",10,
         "example:",10,
         "filterx (== 'x 10) [1..10]    - will return '10'",10,"| what does this mean?  filterx iterates through some data with holding single value in 'x parameter, calculations in brackets () need to return boolean type",10,10,
         "mapx () value          - can be used to modify every element separated by commas or in an array",10,
         "example:",10,
         "mapx (+ 'x 1) 1,2,3   - will return '[2,3,4]'",10,"| what does this mean? mapx iterates through some data similiar to filterx but instead of filtering it modifies every value, so what will operation in brackets () return, this will be a new value",10

         show str filterx (== 'x 0) (prompt = "Press 'enter' to continue")

show str "You can also use if statement:",10,
         "if (== 1 1){",10,"   show bool 1",10,"}",10,
         "and foreach loop:",10,
         "foreach x 1,2,3,4,5{ -- I'm using x name for parameter, you can use whatever you want",10,
          "   show int 'x  -- this will show 5 times values from [1..5]",10,"}",10

          show str filterx (== 'x 0) (prompt = "Press 'enter' to continue")

show str "single line comment looks like this:      --",10,
         "multi line comment starts like this:      {-",10,
         "and ends like this:                       -}",10

         show str filterx (== 'x 0) (prompt = "Press 'enter' to continue")

show str "You can also check if halm is being used on Windows or Unix-like system (Linux, MacOs, Bsd)",10,
         36,"isWindows      - becomes 1 decimal or True in boolean if you use .exe version of Halm",10,
         36,"isUnix         - becomes 1 decimal or True in boolean if you use other version of Halm",10,
         "for example:",10,
         "if ",36,"isWindows{",10,
         "show str ",34,"You're using halm assembler on Windows!",34,10,
         "}",10,"this code will only be executed if you use halm on Windows",10

         show str filterx (== 'x 0) (prompt = "Press 'enter' to continue")

show str "You can also use doSh command, this command can execute shell commands provided between ",34," ",34," ,example:",10,
         "doSh = ",34,"ls -la",34,10,
         "and this is one of main reasons why ",36,"isWindows and ",36,"isUnix"," can be very helpful",10

         show str filterx (== 'x 0) (prompt = "Press 'enter' to continue")

show str "In some situations useful can also be 'sort' and 'reverse' commands        examples:",10,
         "show intArr reverse [1..3] -- will display [3,2,1]",10,
         "show str sort ",34,"fbzeab",34," -- will display ",34,sort "fbzeab",34,10,
         "you can also mix those commands:",10,
         "show str reverse sort ",34,"fbzeab",34," -- will display ",34,reverse sort "fbzeab",34,10

         show str filterx (== 'x 0) (prompt = "Press 'enter' to continue")

show str "addBytes and fillBytes are probably the most useful commands",10,
         "addBytes as name suggests adds bytes to .bin file     example:",10,
         "addBytes = ",34,"test",34,",10        -- adds those bytes to file",10,10,
         "fillBytes can help you if your file ALWAYS needs to have some byte threshold, e.g. instructions can be any number of bytes but the file must be 512 bytes",10,
         "fillBytes 512 0 -- will fill your file to 512 bytes with byte 0",10

         show str filterx (== 'x 0) (prompt = "Press 'enter' to end")

-- ./halm tutorial.halm
